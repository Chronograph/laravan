---
- name: Ensure sudo group is present
  group:
    name: sudo
    state: present

- name: Ensure sudo group has sudo privileges
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL:ALL) ALL"
    validate: "/usr/sbin/visudo -cf %s"

- name: Fail if root login will be disabled but ansible_user will not be a sudoer
  assert:
    that:
      - "{% for user in users if user.name == ansible_user %}{% if loop.first %}{{ 'sudo' in user.groups }}{% endif %}{% else %}{{ false }}{% endfor %}"
      - "{% for user in vault_users | default([]) if user.name == ansible_user %}{% if loop.first %}{{ user.password is defined }}{% endif %}{% else %}{{ false }}{% endfor %}"
    msg: |
      When `sshd_permit_root_login: false`, you must add `sudo` to the `groups` for ansible_user (in `users` hash), and set a password for ansible_user in `vault_users` (in `group_vars/{{ env }}/vault.yml`). Otherwise Ansible could lose the ability to run the necessary sudo commands.
  when: not sshd_permit_root_login

- name: Setup users
  user:
    name: "{{ item.name }}"
    group: "{{ item.groups[0] }}"
    groups: "{{ item.groups | join(',') }}"
    password: '{% for user in vault_users | default([]) if user.name == item.name and user.password is defined %}{% if loop.first %}{{ user.password | password_hash("sha512", user.salt[:16] | default(None) | regex_replace("[^\.\/a-zA-Z0-9]", "x")) }}{% endif %}{% else %}{{ None }}{% endfor %}'
    state: present
    shell: /bin/bash
    update_password: always
  with_items: "{{ users }}"

- name: Add web user sudoers items for services
  template:
    src: sudoers.d.j2
    dest: "/etc/sudoers.d/{{ web_user }}-services"
    mode: 0440
    owner: root
    group: root
    validate: "/usr/sbin/visudo -cf %s"
  when: web_sudoers

- name: Add SSH keys
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
  with_subelements:
    - "{{ users | default([]) }}"
    - keys
