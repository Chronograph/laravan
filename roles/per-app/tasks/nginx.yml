---
- name: Copy SSL cert
  copy:
    src: "{{ item.value.ssl.cert }}"
    dest: "{{ nginx_ssl_path }}/{{ item.value.ssl.cert | basename }}"
    mode: 0640
  with_dict: "{{ apps }}"
  when: app_needs_nginx and ssl_enabled and item.value.ssl.cert is defined
  tags: certs

- name: Copy SSL key
  copy:
    src: "{{ item.value.ssl.key }}"
    dest: "{{ nginx_ssl_path }}/{{ item.value.ssl.key | basename }}"
    mode: 0600
  with_dict: "{{ apps }}"
  when: app_needs_nginx and ssl_enabled and item.value.ssl.key is defined
  tags: certs

- name: Create Nginx conf for challenges location
  template:
    src: "{{ playbook_dir }}/roles/letsencrypt/templates/acme-challenge-location.conf.j2"
    dest: "{{ nginx_path }}/acme-challenge-location.conf"
  notify: reload nginx

- name: Create user file for auth basic
  htpasswd:
    path: "{{ auth_basic_htpasswd_file }}"
    name: "{{ item.value.auth_basic.username }}"
    password: "{{ item.value.auth_basic.password }}"
  when: app_uses_auth_basic
  with_dict: "{{ apps }}"

- name: Create Laravan configurations for Nginx
  template:
    src: "{{ item.value.nginx_conf | default('laravan-app.conf.j2') }}"
    dest: "{{ nginx_path }}/sites-available/{{ item.key }}.conf"
  with_dict: "{{ apps }}"
  when: app_needs_nginx
  notify: reload nginx
  tags: [certs, letsencrypt]

- name: Enable Laravan sites
  file:
    src: "{{ nginx_path }}/sites-available/{{ item.key }}.conf"
    dest: "{{ nginx_path }}/sites-enabled/{{ item.key }}.conf"
    owner: root
    group: root
    state: link
  with_dict: "{{ apps }}"
  when: app_needs_nginx
  notify: reload nginx
